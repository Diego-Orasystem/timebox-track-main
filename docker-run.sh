#!/bin/bash

# Script para facilitar el uso de Docker con timebox-track

show_help() {
    echo "Uso: ./docker-run.sh [OPCI√ìN]"
    echo ""
    echo "Opciones:"
    echo "  prod      Ejecutar en modo producci√≥n (puerto 4000)"
    echo "  dev       Ejecutar en modo desarrollo (puerto 4200)"
    echo "  build     Solo construir las im√°genes sin ejecutar"
    echo "  stop      Detener todos los contenedores"
    echo "  clean     Limpiar im√°genes y contenedores"
    echo "  help      Mostrar esta ayuda"
    echo ""
    echo "Ejemplos:"
    echo "  ./docker-run.sh prod    # Ejecutar en producci√≥n"
    echo "  ./docker-run.sh dev     # Ejecutar en desarrollo"
    echo "  ./docker-run.sh stop    # Detener contenedores"
}

case "$1" in
    "prod")
        echo "üöÄ Iniciando aplicaci√≥n en modo PRODUCCI√ìN..."
        echo "üìç Frontend: http://localhost:4000"
        echo "üîó Backend: http://10.90.0.190:3000"
        docker-compose up --build
        ;;
    "dev")
        echo "üõ†Ô∏è  Iniciando aplicaci√≥n en modo DESARROLLO (Docker)..."
        echo "üìç Frontend: http://localhost:4200"
        echo "üîó Backend: http://10.90.0.190:3000"
        docker-compose --profile dev up --build
        ;;
    "build")
        echo "üî® Construyendo im√°genes de Docker..."
        docker-compose build
        docker build -f Dockerfile.dev -t timebox-track-dev .
        echo "‚úÖ Im√°genes construidas exitosamente"
        ;;
    "stop")
        echo "üõë Deteniendo contenedores..."
        docker-compose down
        echo "‚úÖ Contenedores detenidos"
        ;;
    "clean")
        echo "üßπ Limpiando im√°genes y contenedores..."
        docker-compose down --volumes --remove-orphans
        docker image rm timebox-track timebox-track-dev 2>/dev/null || true
        echo "‚úÖ Limpieza completada"
        ;;
    "help"|"")
        show_help
        ;;
    *)
        echo "‚ùå Opci√≥n no v√°lida: $1"
        echo ""
        show_help
        exit 1
        ;;
esac